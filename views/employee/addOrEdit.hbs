<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{{viewTitle}}</title>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
    />
    <style>
    body {
  background: url('https://res.cloudinary.com/dc4dywdvb/image/upload/v1727377999/unnamed_f4ciap.jpg') no-repeat center center fixed;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  margin: 0;
  padding: 0;
  height: 100vh;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  display: flex;
  flex-direction: column;
}

.header {
  background: #f6f6f6;
  color: white;
  padding: 10px 0;
  text-align: left;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100;
}

.container {
  max-width: 600px;
  background-color: rgba(255, 255, 255, 0.9); /* Semi-transparent background */
  padding: 50px;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  margin-top: 60px; /* Space for fixed header */
  overflow-y: auto;
  max-height: calc(100vh - 100px); /* Make the form scrollable */
}

h2 {
  text-align: center;
  margin-bottom: 30px;
  color: #333;
  font-weight: 700;
}

label {
  font-weight: bold;
}

.form-control {
  border-radius: 50px;
  padding: 15px;
  font-size: 1rem;
  margin-bottom: 20px;
}

.btn-primary {
  background-color: #007bff;
  border: none;
  padding: 12px 30px;
  border-radius: 50px;
  width: 100%;
  font-size: 1.2rem;
  font-weight: bold;
}

.btn-primary:hover {
  background-color: #0056b3;
}

.home-btn {
  background: #3e50b4;
  color: white;
  padding: 10px 20px;
  border-radius: 50px;
  font-weight: bold;
  display: inline-flex;
  align-items: center;
  text-decoration: none;
  transition: background-color 0.3s, transform 0.3s;
  margin-left: 20px; /* Added margin to move button to the right */
}

.home-btn:hover {
  background-color: #5f6ec2;
  transform: translateY(-2px);
}

.home-btn i {
  margin-right: 10px;
}

.form-group {
  margin-bottom: 20px;
}

.header {
  background: #f6f6f6;
  color: white;
  padding: 5px 0;
  border-radius: 0;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100;
}
    </style>
  </head>
  <body>
     <div class="header">
      <a href="/" class="home-btn">
        <i class="fas fa-home"></i>
        Home
      </a></div>
    <div class="container">
      <h2>{{viewTitle}}</h2>
      
            {{#if errorMessage}}
        <div class="alert alert-danger">
          {{errorMessage}}
        </div>
      {{/if}}
      <!-- Conditional form action for both create and update -->
      <form action="/employee{{#if employee._id}}/update/{{employee._id}}{{/if}}" method="POST">
        <div class="form-group">
          <label for="fullName">Full Name</label>
          <input
            type="text"
            class="form-control"
            id="fullName"
            name="fullName"
            value="{{employee.fullName}}"
            placeholder="Enter full name"
            required
          />
        </div>
        <div class="form-group">
          <label for="email">Email</label>
          <input
            type="email"
            class="form-control"
            id="email"
            name="email"
            value="{{employee.email}}"
            placeholder="Enter email address"
            required
          />
        </div>
        <div class="form-group">
          <label for="mobile">Mobile</label>
          <input
            type="text"
            class="form-control"
            id="mobile"
            name="mobile"
            value="{{employee.mobile}}"
            placeholder="Enter mobile number"
            required
          />
        </div>
        <div class="form-group">
          <label for="city">City</label>
          <input
            type="text"
            class="form-control"
            id="city"
            name="city"
            value="{{employee.city}}"
            placeholder="Enter city"
            required
          />
        </div>

        <!-- New fields: Salary, Position, Employee ID -->
        <div class="form-group">
          <label for="salary">Salary</label>
          <input
            type="number"
            class="form-control"
            id="salary"
            name="salary"
            value="{{employee.salary}}"
            placeholder="Enter salary"
            required
          />
        <div class="form-group">
    <label for="department">Department</label>
    <select id="department" class="form-control" name="department" required>
        <option value="">Select Department</option>
    </select>
</div>

        <div class="form-group">
          <label for="position">Position</label>
          <input
            type="text"
            class="form-control"
            id="position"
            name="position"
            value="{{employee.position}}"
            placeholder="Enter position"
          
          />
        </div>
        <div class="form-group">
          <label for="employeeId">Employee ID</label>
          <input
            type="text"
            class="form-control"
            id="employeeId"
            name="employeeId"
            value="{{employee.employeeId}}"
            placeholder="Enter employee ID"
            required
          />
        </div>

        <button type="submit" class="btn btn-primary">
          {{#if employee._id}}Update{{else}}Create{{/if}}
        </button>
      </form>
    </div>
  </body>
</html>
<script>
    async function fetchAllDepartments() {
        try {
            const response = await fetch('/departments');
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const departments = await response.json();

            const departmentSelect = document.getElementById('department');
            departmentSelect.innerHTML = '<option value="">Select Department</option>'; // Clear existing options

            // Populate the select element with department options
            departments.forEach(department => {
                const option = document.createElement('option');
                option.value = department._id;
                option.textContent = department.name;
                departmentSelect.appendChild(option);
            });
        } catch (error) {
            console.error('Error fetching departments:', error);
        }
    }

    // Call the function to fetch departments when the page loads
    window.onload = fetchAllDepartments;
</script>